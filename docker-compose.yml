services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  server:
    build:
      context: src/server/
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    environment:
      DB_HOST: db
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      REDIS_ADDRESS: ${REDIS_ADDRESS}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      TICK_MS: ${TICK_MS}
    ports:
      - "8080:8080"

  client:
    build:
      context: src/client/
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    environment:
      CLIENT_HOST: ${CLIENT_HOST}
      CLIENT_PORT: ${CLIENT_PORT}
      API_URL:  ${API_URL}
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"

  migrate:
    image: golang:1.24.1
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    volumes:
      - ./src/server/sql/schema:/migrations
    entrypoint:
      [
        "/bin/sh",
        "-c",
        'go install github.com/pressly/goose/v3/cmd/goose@latest && goose -dir /migrations postgres "postgres://$DB_USER:$DB_PASSWORD@db:$DB_PORT/$DB_NAME?sslmode=disable" up',
      ]

  redis:
    image: redis:latest
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data


volumes:
  postgres_data:
  redis_data:
